version: '3.8'

services:
  postgres:
    platform: linux/amd64
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: pg_isready -U ${DB_USER}
      interval: 10s
      timeout: 5s
      retries: 3

  client:
    platform: linux/amd64
    build:
      context: ./client
      target: production
    environment:
      - NEXT_PUBLIC_API_URL=/api
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      - server

  server:
    platform: linux/amd64
    build:
      context: ./server
      target: production
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      - RUST_LOG=info
      - HOST=0.0.0.0
      - PORT=8080
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - client
      - server

volumes:
  postgres_data:
    name: livepool-postgres-data-prod

networks:
  default:
    name: livepool-network-prod
    driver: bridge
