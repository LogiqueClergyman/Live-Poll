version: "3.8"

services:
  # postgres:
  #   platform: linux/amd64
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_USER: ${DB_USER}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     POSTGRES_DB: ${DB_NAME}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   command: ["postgres", "-c", "log_statement=all"]

  client:
    platform: linux/amd64
    # build:
    #   context: ./client
    #   target: production
    image: ${ECR_REPO_URI}/adi_voting_client:latest
    # ports:
    #   - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://13.201.129.4/api
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      server:
        condition: service_started

  server:
    platform: linux/amd64
    # build:
    #   context: ./server
    #   target: production
    image: ${ECR_REPO_URI}/adi_voting_server:latest
    # ports:
    #   - "8080:8080"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - RUST_LOG=debug
      - HOST=0.0.0.0
      - RP_ORIGIN=http://localhost
      - RP_ID=localhost
      - PORT=8080
    restart: unless-stopped
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    hostname: server

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - client
      - server

# volumes:
#   postgres_data:
#     name: livepool-postgres-data-prod

networks:
  default:
    name: livepool-network-prod
    driver: bridge
